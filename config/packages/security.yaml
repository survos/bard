security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
#        admin_entity_provider:
#            entity:
#                class: App\Entity\AdminUser
#                property: email
        # users_in_memory: { memory: null }

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
#        admin:
#            pattern: ^/admin
#            user_checker: Umbrella\AdminBundle\Security\UserChecker
#            entry_point: Umbrella\AdminBundle\Security\AuthenticationEntryPoint
#            provider: admin_entity_provider
#            lazy: true
#            form_login:
#                login_path: umbrella_admin_login
#                check_path: umbrella_admin_login
#                default_target_path: app_admin_home_index # !! Depends on your configuration
#                enable_csrf: true
#            logout:
#                path: umbrella_admin_logout
#                target: umbrella_admin_login

        main:
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            lazy: true
            # provider: users_in_memory

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    enable_authenticator_manager: true
    password_hashers:
        App\Entity\AdminUser: auto
        # - { path: ^/profile, roles: ROLE_USER }

    access_control:
        - { path: ^/admin/login$, role: PUBLIC_ACCESS } # Admin login url mus be public
        - { path: ^/admin/password_request, role: PUBLIC_ACCESS } # Admin password request url must be public
        - { path: ^/admin/password_reset, role: PUBLIC_ACCESS } # Admin password reset url must be public
        - { path: ^/admin, roles: ROLE_ADMIN } # Other admin urls must be protected
